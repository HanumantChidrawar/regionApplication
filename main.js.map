{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/countries/countries.component.css","webpack:///./src/app/countries/countries.component.html","webpack:///./src/app/countries/countries.component.ts","webpack:///./src/app/country/country.component.css","webpack:///./src/app/country/country.component.html","webpack:///./src/app/country/country.component.ts","webpack:///./src/app/population.pipe.ts","webpack:///./src/app/region/region.component.css","webpack:///./src/app/region/region.component.html","webpack:///./src/app/region/region.component.ts","webpack:///./src/app/regions/regions.component.css","webpack:///./src/app/regions/regions.component.html","webpack:///./src/app/regions/regions.component.ts","webpack:///./src/app/shared/go-back/go-back.component.css","webpack:///./src/app/shared/go-back/go-back.component.html","webpack:///./src/app/shared/go-back/go-back.component.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/top-button/top-button.component.css","webpack:///./src/app/shared/top-button/top-button.component.html","webpack:///./src/app/shared/top-button/top-button.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!-- This is a navigation bar on shell page-->\\n<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Regions App</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse \\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item \\\">\\n        <a class=\\\"nav-link\\\" [routerLink]='[\\\"/regions\\\"]'>Regions</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]='[\\\"/countries\\\",\\\"all\\\"]'>Countries</a>\\n      </li>\\n    </ul>\\n\\n  </div>\\n</nav>\\n\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { RegionsComponent } from './regions/regions.component';\nimport { CountriesComponent } from './countries/countries.component';\nimport { RegionComponent } from './region/region.component';\nimport { CountryComponent } from './country/country.component';\nimport { AppService } from './app.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PopulationPipe } from './population.pipe';\nimport { FilterPipeModule } from 'ngx-filter-pipe';\n//To use ngModel importing the required files.\nimport { FormsModule } from '@angular/forms';\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegionsComponent,\n    CountriesComponent,\n    RegionComponent,\n    CountryComponent,\n    PopulationPipe\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    SharedModule,\n    FormsModule,\n    FilterPipeModule,\n    RouterModule.forRoot([\n      { path: 'regions', component: RegionsComponent },\n      { path: 'countries/:type', component: CountriesComponent },\n      { path: 'region/:regionName', component: RegionComponent },\n      { path: 'country/:countryName', component: CountryComponent },\n      { path: '', redirectTo: 'regions', pathMatch: 'full' },\n      { path: '*', component: RegionsComponent }\n    ])\n  ],\n  providers: [AppService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from \"rxjs\";\nimport  \"rxjs/operator\";\nimport {myInterface} from './myInterface';\n\n@Injectable()\nexport class AppService implements myInterface{\n\n  public baseUrl: string = \"https://restcountries.eu/rest/v2\";\n\n  constructor(public _http: HttpClient) { }\n\n  public getCountriesInRegion: any = (name?: string) => {\n\n    return (name !== \"all\") ? (this._http.get(`${this.baseUrl}/region/${name}`)) : (this._http.get(`${this.baseUrl}/all`));\n\n  }//end getCountriesIRegion\n\n  public getCountries: any = () => {\n\n    return this._http.get(`${this.baseUrl}/all/?fields=name;currencies;languages;flag`);\n\n  }//end getCountries for all getting all countries in the world.\n\n  public getCountryDetails: any = (name: string) => {\n\n    if (name.length === 3) {\n      return this._http.get(`${this.baseUrl}/alpha/${name}`);\n\n    }\n    else {\n\n      return this._http.get(`${this.baseUrl}/name/${name}?fullText=true`);\n\n    }\n\n  }//end getCountryDetails\n\n  public findAll(type: string, item: any): any {\n\n    let allItems: any = [];\n\n    this.getCountries().subscribe(\n      data => {\n\n        if (type === \"languages\") {\n          for (let singleElement of data) {\n\n            for (let singleLanguage of singleElement.languages) {\n\n              if (singleLanguage.name === item) {\n                allItems.push(singleElement);\n              }\n            }\n          }\n        }\n        else {\n          for (let singleElement of data) {\n            for (let singleCurrency of singleElement[type]) {\n              if (singleCurrency.symbol === item.symbol) {\n                allItems.push(singleElement);\n              }\n            }\n          }\n        }\n      },\n      error => {\n        console.log(error);\n      }\n\n    );//end subscribe method\n    return allItems;\n  }//end of findAll method\n\n  public setObjectInfoInLocalStorage= (data) => {\n    localStorage.setItem('object',JSON.stringify(data));\n  }//end of setlocalstorage function\n\n  public getObjectInfoFromLocalStorage:any = ()=>{\n    return JSON.parse(localStorage.getItem('object'));\n  }//end of getlocalstorage function\n}\n","module.exports = \".card{\\r\\n    margin-top: 4%;\\r\\n}\\r\\na{\\r\\n    text-decoration: none;\\r\\n    color: black;\\r\\n}\\r\\np{\\r\\n    cursor: pointer;\\r\\n}\\r\\n.card-header{\\r\\n    background-color: darkcyan;\\r\\n    color:white;\\r\\n}\\r\\n.card-footer{\\r\\n    background-color: darkcyan;\\r\\n    color: white;\\r\\n}\\r\\nimg{\\r\\n    height:300px;\\r\\n}\"","module.exports = \"<section class=\\\"container\\\">\\n\\n  <div class=\\\"row\\\">\\n\\n    <input type=\\\"text\\\" class=\\\"form-control btn-outline-primary\\\" name=\\\"filterName\\\" [(ngModel)]=\\\"filterName.name\\\" placeholder=\\\"Search by Name\\\"\\n    />\\n\\n    <div class=\\\"alert alert-success col-12\\\" role=\\\"alert\\\" *ngIf=\\\"match\\\">\\n      Filter Applied\\n    </div>\\n\\n    <div class=\\\"card col-md-6\\\" *ngFor=\\\"let country of allCountries |filterBy:filterName\\\">\\n      <a [routerLink]='[\\\"/country\\\",country.name]'>\\n        <img class=\\\"card-img-top\\\" [src]=\\\"country.flag\\\" alt=\\\"Country flag\\\">\\n        <div class=\\\"card-header\\\">\\n          <h3>{{country.name}}</h3>\\n        </div>\\n      </a>\\n      <div class=\\\"card-body\\\">\\n        <h4>Languages: </h4>\\n        <p class=\\\"card-text\\\" *ngFor=\\\"let language of country.languages\\\">\\n          <a *ngIf=\\\"language\\\" (click)=\\\"filter('languages',language.name)\\\">{{language.name}}</a>\\n        </p>\\n      </div>\\n      <div class=\\\"card-footer\\\" *ngIf=\\\"country.currencies\\\">\\n        <h4>Curreny:</h4>\\n        <p class=\\\"card-text\\\" *ngFor=\\\"let currency of country.currencies\\\">\\n          <a *ngIf=\\\"currency\\\" (click)=\\\"filter('currencies',currency)\\\" class=\\\"row\\\">\\n              <div class=\\\"col-6\\\">Code: {{currency.code}}</div>\\n              <div class=\\\"col-6\\\">Symbol: {{currency.symbol}}</div>\\n          </a>\\n        </p>\\n      </div>\\n    </div>\\n\\n    <app-top-button></app-top-button>\\n    <app-go-back class=\\\"offset-4 col-4\\\"></app-go-back>\\n  </div>\\n\\n</section>\"","import { Component, OnInit, ViewContainerRef } from '@angular/core';\nimport { AppService } from '../app.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.css']\n})\nexport class CountriesComponent implements OnInit {\n\n  public allCountries: any;\n  public filterName: any = { name: '' };\n  public match:boolean=false;\n\n  constructor(\n    public appService: AppService, \n    public _route: ActivatedRoute, \n    public router: Router\n  ) {\n  }\n\n  ngOnInit() {\n\n    this._route.params.subscribe(() => {\n      let type: string = this._route.snapshot.paramMap.get('type');\n      let item: string = this.appService.getObjectInfoFromLocalStorage();\n    \n      if (type === \"all\") {\n        this.appService.getCountriesInRegion('all').subscribe(\n          (data) => {\n\n            this.allCountries = data;\n            this.match=false;\n\n          },\n          (error) => {\n            console.log(\"Some Error Occured\");\n          }\n        );\n      }\n      else {\n        this.match=true;\n        this.allCountries = this.appService.findAll(type, item);\n      }\n    });\n\n  }\n\n  public filter(type: string, item: any): any {\n    this.match=true;\n    this.allCountries = this.appService.findAll(type, item);\n  }\n\n}\n","module.exports = \"h1{\\r\\n    text-align: center;\\r\\n    padding: 2%;\\r\\n    font-size:3rem;\\r\\n}\\r\\na{\\r\\n    text-decoration: none;\\r\\n    color: black;\\r\\n}\\r\\n.national-flag{\\r\\n    background-color:darkslategray;\\r\\n    width: 100%;   \\r\\n    color: white;\\r\\n}\\r\\n.custom{\\r\\n    background-color: darkcyan;\\r\\n    color: white;\\r\\n}\\r\\n.marg{\\r\\n    margin-top: 4%;\\r\\n    box-shadow: 1px 2px 4px rgba(0, 0, 0, .5);\\r\\n}\\r\\n.special{\\r\\n    background-color:floralwhite; \\r\\n}\"","module.exports = \"<section class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\" *ngIf=\\\"singleCountry\\\">\\n\\n    <div class=\\\"col-12\\\" class=\\\"national-flag\\\">\\n      <img [src]=\\\"singleCountry.flag\\\" class=\\\"img-thumbnail mx-auto d-block\\\" alt=\\\"singleCountry.name\\\">\\n      <h1>{{singleCountry.name | uppercase}}</h1>\\n    </div>\\n\\n    <div class=\\\"card col-12 marg\\\">\\n      <div class=\\\"card-header custom\\\">\\n        About {{singleCountry.name}}\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6\\\">\\n            <h3>Capital: </h3>\\n            <p>{{singleCountry.capital}}</p>\\n          </div>\\n          <div class=\\\"col-6\\\">\\n            <h3>Native Name: </h3>\\n            <p>{{singleCountry.nativeName}}</p>\\n          </div>\\n          <div class=\\\"col-6\\\">\\n            <h3>Region: </h3>\\n            <p>{{singleCountry.region}}</p>\\n          </div>\\n          <div class=\\\"col-6\\\">\\n            <h3>Sub Region: </h3>\\n            <p>{{singleCountry.subregion}}</p>\\n          </div>\\n          <div class=\\\"col-6\\\">\\n            <h3>Region Blocs: </h3>\\n            <p *ngFor=\\\"let regionBloc of singleCountry.regionalBlocs\\\">{{regionBloc.acronym}}</p>\\n          </div>\\n          <div class=\\\"col-6\\\">\\n            <h3>Demonym: </h3>\\n            <p>{{singleCountry.demonym}}</p>\\n          </div>\\n          <div class=\\\"col-6\\\">\\n            <h3>CIOC: </h3>\\n            <p>{{singleCountry.cioc}}</p>\\n          </div>\\n          <div class=\\\"col-6\\\">\\n            <h3>Time Zones: </h3>\\n            <p *ngFor=\\\"let timeZone of singleCountry.timezones\\\">{{timeZone}}</p>\\n          </div>\\n          <div class=\\\"col-6\\\">\\n            <h3>Population: </h3>\\n            <p>{{singleCountry.population | population}}</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"card col-sm-6 marg\\\">\\n      <div class=\\\"card-header custom\\\">\\n        Important Codes\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <h3>2 Char Code:</h3>\\n        <p>{{singleCountry.alpha2Code}}</p>\\n        <h3>3 Char Code:</h3>\\n        <p>{{singleCountry.alpha3Code}}</p>\\n        <h3>Calling Code:</h3>\\n        <p *ngFor=\\\"let code of singleCountry.callingCodes\\\">{{code}}</p>\\n        <h3>Alt Spells:</h3>\\n        <button class=\\\"btn btn-block btn-outline-primary\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#AltSpells\\\" aria-expanded=\\\"false\\\"\\n          aria-controls=\\\"collapseExample\\\">\\n          Alternative spellings\\n        </button>\\n        <div class=\\\"collapse\\\" id=\\\"AltSpells\\\">\\n          <div class=\\\"card card-body\\\" *ngFor=\\\"let spell of singleCountry.altSpellings\\\">\\n            {{spell}}\\n          </div>\\n        </div>\\n\\n        <h3>Famous Translations:</h3>\\n        <button class=\\\"btn btn-block btn-outline-primary\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseExample\\\" aria-expanded=\\\"false\\\"\\n          aria-controls=\\\"collapseExample\\\">\\n          Tap Me\\n        </button>\\n        <div class=\\\"collapse\\\" id=\\\"collapseExample\\\">\\n          <div class=\\\"card card-body\\\" *ngFor=\\\"let translation of translations\\\">\\n            {{singleCountry.translations[translation]}}\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"card col-sm-6 marg\\\">\\n      <div class=\\\"card-header custom\\\">\\n        Currency , Languages & Borders\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"accordion\\\" id=\\\"accordion\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-header special\\\" id=\\\"headingOne\\\">\\n              <h5 class=\\\"mb-0\\\">\\n                <button class=\\\"btn btn-block btn-outline-info\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseOne\\\" aria-expanded=\\\"true\\\"\\n                  aria-controls=\\\"collapseOne\\\">\\n                  Currency\\n                </button>\\n              </h5>\\n            </div>\\n\\n            <div id=\\\"collapseOne\\\" class=\\\"collapse show\\\" aria-labelledby=\\\"headingOne\\\" data-parent=\\\"#accordion\\\">\\n              <div class=\\\"card-body\\\" *ngFor=\\\"let currency of singleCountry.currencies\\\">\\n                <a class=\\\"row\\\" *ngIf=\\\"currency\\\" (click)=\\\"filter('currencies',currency)\\\">\\n                  <div class=\\\"col-4\\\">Code: {{currency.code}}</div>\\n                  <div class=\\\"col-4\\\">Name: {{currency.name}}</div>\\n                  <div class=\\\"col-4\\\">Symbol: {{currency.symbol}}</div>\\n                </a>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-header special\\\" id=\\\"headingTwo\\\">\\n              <h5 class=\\\"mb-0\\\">\\n                <button class=\\\"btn btn-block btn-outline-warning collapsed\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseTwo\\\"\\n                  aria-expanded=\\\"false\\\" aria-controls=\\\"collapseTwo\\\">\\n                  Languages\\n                </button>\\n              </h5>\\n            </div>\\n            <div id=\\\"collapseTwo\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#accordion\\\">\\n              <div class=\\\"card-body\\\" *ngFor=\\\"let language of singleCountry.languages\\\">\\n                <a class=\\\"row\\\" *ngIf=\\\"language\\\" (click)=\\\"filter('languages',language.name)\\\">\\n                  <div class=\\\"col-6\\\">Name: {{language.name}}</div>\\n                  <div class=\\\"col-6\\\">Native Name: {{language.nativeName}}</div>\\n                </a>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-header special\\\" id=\\\"headingThree\\\">\\n              <h5 class=\\\"mb-0\\\">\\n                <button class=\\\"btn btn-block btn-outline-success collapsed\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseThree\\\"\\n                  aria-expanded=\\\"false\\\" aria-controls=\\\"collapseThree\\\">\\n                  Borders\\n                </button>\\n              </h5>\\n            </div>\\n            <div id=\\\"collapseThree\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingThree\\\" data-parent=\\\"#accordion\\\">\\n              <div class=\\\"card-body\\\" style=\\\"text-align: center\\\" *ngFor=\\\"let border of singleCountry.borders\\\">\\n                <a class=\\\"btn btn-block\\\" [routerLink]='[\\\"/country\\\",border]'>{{border}}</a>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <app-go-back class=\\\"offset-4 col-4 marg\\\"></app-go-back>\\n  </div>\\n</section>\"","import { Component, OnInit } from '@angular/core';\nimport { AppService } from '../app.service';\n//importing files for redirecting from one component to other\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-country',\n  templateUrl: './country.component.html',\n  styleUrls: ['./country.component.css']\n})\nexport class CountryComponent implements OnInit {\n\n\n  public singleCountry: any;\n  public translations: any = [];\n  constructor(public appService: AppService, public _route: ActivatedRoute, public router: Router) { }\n\n  ngOnInit() {\n\n    this._route.params.subscribe(() => {\n\n      let countryName: string = this._route.snapshot.paramMap.get('countryName')\n\n      this.appService.getCountryDetails(countryName).subscribe(\n        (data) => {\n\n          this.singleCountry = (data.length != undefined) ? data[0] : data;\n\n          let temp = Object.keys(this.singleCountry.translations);\n          for (let x of temp) {\n            this.translations.push(x);\n          }\n\n        },\n        (error) => {\n          console.log(\"Some Error Occured\");\n        }\n      );//end of subscribe method\n    });\n\n\n  }\n\n  public filter(type: string, item: any): any {\n    this.appService.setObjectInfoInLocalStorage(item);\n    this.router.navigate(['/countries',type]);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'population'\n})\nexport class PopulationPipe implements PipeTransform {\n\n  transform(value: any): any {\n\n    let denominations: number[] = [1000000000, 100000000, 1000000, 1000];\n    let display: string;\n\n\n    if (value > denominations[0]) {\n      display = (value / denominations[0]).toFixed(2) + \" Billions\"\n      return display;\n    }\n    else if (value > denominations[1]) {\n      display = ((value / denominations[1]) * 100).toFixed(2) + \" Millions\"\n      return display;\n    }\n    else if (value > denominations[2]) {\n      display = (value / denominations[2]).toFixed(2) + \" Millions\"\n      return display;\n    }\n    else {\n      display = (value / denominations[3]).toFixed(2) + \" K (Thousands)\"\n      return display;\n    }\n\n\n\n  }\n\n}\n","module.exports = \".card{\\r\\n    margin-top: 4%;\\r\\n}\\r\\na{\\r\\n    text-decoration: none;\\r\\n    color: black;\\r\\n}\\r\\np{\\r\\n    cursor: pointer;\\r\\n}\\r\\n.card-header{\\r\\n    background-color: darkcyan;\\r\\n    color:white;\\r\\n}\\r\\n.card-footer{\\r\\n    background-color: darkcyan;\\r\\n    color: white;\\r\\n}\\r\\nimg{\\r\\n    height:300px;\\r\\n}\"","module.exports = \"<section class=\\\"container\\\">\\n\\n  <div class=\\\"row\\\">\\n\\n    <input type=\\\"text\\\" class=\\\"form-control btn-outline-primary\\\" name=\\\"filterName\\\" [(ngModel)]=\\\"filterName.name\\\" placeholder=\\\"Search by Name\\\"\\n    />\\n\\n    <div class=\\\"card col-md-6\\\" *ngFor=\\\"let country of countiresInRegion |filterBy:filterName\\\">\\n      <a [routerLink]='[\\\"/country\\\",country.name]'>\\n        <img class=\\\"card-img-top\\\" [src]=\\\"country.flag\\\" alt=\\\"Country flag\\\">\\n        <div class=\\\"card-header\\\">\\n          <h3>{{country.name}}</h3>\\n        </div>\\n      </a>\\n      <div class=\\\"card-body\\\" *ngIf=\\\"country.languages\\\">\\n        <h4>Languages: </h4>\\n        <p class=\\\"card-text\\\" *ngFor=\\\"let language of country.languages\\\">\\n          <a *ngIf=\\\"language\\\" (click)=\\\"filter('languages',language.name)\\\">{{language.name}}</a>\\n        </p>\\n      </div>\\n      <div class=\\\"card-footer\\\" *ngIf=\\\"country.currencies\\\">\\n        <h4>Curreny:</h4>\\n        <p class=\\\"card-text\\\" *ngFor=\\\"let currency of country.currencies\\\">\\n          <a *ngIf=\\\"currency\\\" (click)=\\\"filter('currencies',currency)\\\" class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">Code: {{currency.code}}</div>\\n            <div class=\\\"col-6\\\">Symbol: {{currency.symbol}}</div>\\n          </a>\\n        </p>\\n      </div>\\n    </div>\\n\\n    <app-top-button></app-top-button>\\n    <app-go-back class=\\\"offset-4 col-4\\\"></app-go-back>\\n  </div>\\n\\n</section>\"","import { Component, OnInit } from '@angular/core';\nimport { AppService } from '../app.service';\n//importing files for redirecting from one component to other\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-region',\n  templateUrl: './region.component.html',\n  styleUrls: ['./region.component.css']\n})\nexport class RegionComponent implements OnInit {\n\n  public countiresInRegion: any = [];\n  public filterName: any = { name: '' };\n\n  constructor(public appService: AppService, public _route: ActivatedRoute, public router: Router) { }\n\n  ngOnInit() {\n    let regionName: string = this._route.snapshot.paramMap.get('regionName')\n\n    this.appService.getCountriesInRegion(regionName).subscribe(\n      (data) => {\n\n        this.countiresInRegion = data;\n\n      },\n      (error) => {\n        console.log(\"Some Error Occured\");\n      }\n    );\n  }\n\n  public filter(type: string, item: any): any {\n    this.appService.setObjectInfoInLocalStorage(item);\n    this.router.navigate(['/countries',type]);\n  }\n\n}\n","module.exports = \"figure img{\\r\\n    height: 400px;\\r\\n    width:100%;\\r\\n}\\r\\nsection{\\r\\n    background-color: black;\\r\\n}\"","module.exports = \"<section class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <figure class=\\\"figure col-md-6\\\">\\n      <a [routerLink]='[\\\"/region\\\",\\\"africa\\\"]'>\\n        <img src=\\\"../../assets/Africa_Region.jpg\\\" class=\\\"figure-img img-fluid rounded\\\" alt=\\\"A generic square placeholder image with rounded corners in a figure.\\\">\\n        <figcaption class=\\\"figure-caption\\\">Africa_Region</figcaption>\\n      </a>\\n    </figure>\\n\\n    <figure class=\\\"figure col-md-6\\\">\\n      <a [routerLink]='[\\\"/region\\\",\\\"americas\\\"]'>\\n        <img src=\\\"../../assets/Americas_Region.png\\\" class=\\\"figure-img img-fluid rounded\\\" alt=\\\"A generic square placeholder image with rounded corners in a figure.\\\">\\n        <figcaption class=\\\"figure-caption\\\">Americas_Region</figcaption>\\n      </a>\\n    </figure>\\n\\n    <figure class=\\\"figure col-md-6\\\">\\n      <a [routerLink]='[\\\"/region\\\",\\\"asia\\\"]'>\\n        <img src=\\\"../../assets/Asian_Region.jpg\\\" class=\\\"figure-img img-fluid rounded\\\" alt=\\\"A generic square placeholder image with rounded corners in a figure.\\\">\\n        <figcaption class=\\\"figure-caption\\\">Asian_Region</figcaption>\\n      </a>\\n    </figure>\\n\\n    <figure class=\\\"figure col-md-6\\\">\\n      <a [routerLink]='[\\\"/region\\\",\\\"europe\\\"]'>\\n        <img src=\\\"../../assets/Europe_Region.jpg\\\" class=\\\"figure-img img-fluid rounded\\\" alt=\\\"A generic square placeholder image with rounded corners in a figure.\\\">\\n        <figcaption class=\\\"figure-caption\\\">Europe_Region</figcaption>\\n      </a>\\n    </figure>\\n\\n    <figure class=\\\"figure col-12\\\">\\n      <a [routerLink]='[\\\"/region\\\",\\\"oceania\\\"]'>\\n        <img src=\\\"../../assets/Oceania_Region.jpg\\\" class=\\\"figure-img img-fluid rounded\\\" style=\\\"height:80%\\\" alt=\\\"A generic square placeholder image with rounded corners in a figure.\\\">\\n        <figcaption class=\\\"figure-caption\\\">Oceania_Region</figcaption>\\n      </a>\\n    </figure>\\n  </div>\\n</section>\"","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-regions',\n  templateUrl: './regions.component.html',\n  styleUrls: ['./regions.component.css']\n})\nexport class RegionsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  \n\n}\n","module.exports = \"\"","module.exports = \"\\n    <button class=\\\"btn btn-block btn-outline-success\\\" (click)=\\\"goBack()\\\">Go Back</button>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\n//importing files for redirecting from one component to other\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-go-back',\n  templateUrl: './go-back.component.html',\n  styleUrls: ['./go-back.component.css']\n})\nexport class GoBackComponent implements OnInit {\n\n  constructor(public location:Location,private _route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  //goBack Method\n  public goBack(): any {\n    this.location.back();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TopButtonComponent } from './top-button/top-button.component';\nimport { GoBackComponent } from './go-back/go-back.component';\n//importing location service for back button functionality.\nimport {  Location } from '@angular/common';\n\n//import statement for Go to Top button\nimport {GoTopButtonModule, GoTopButton} from 'ng2-go-top-button';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    GoTopButtonModule\n  ],\n  declarations: [TopButtonComponent, GoBackComponent],\n  providers:[Location],\n  exports:[\n    GoBackComponent,\n    TopButtonComponent,\n    GoTopButton,\n    GoTopButtonModule,\n    CommonModule\n  ]\n})\nexport class SharedModule { }\n","module.exports = \"\"","module.exports = \"<!-- This is for Go to Top Button-->\\n<go-top-button [animate]=\\\"true\\\" [speed]=\\\"50\\\" [acceleration]=\\\"50\\\" [scrollDistance]=\\\"300\\\" [styles]=\\\"{\\n   'border-radius': '50%',\\n   'color': '#fff',\\n   'background-color': 'rgb(255, 82, 82)',\\n   'border': '5px solid',\\n   'line-height': '20px'\\n}\\\">\\n<span>Up</span>\\n</go-top-button>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-top-button',\n  templateUrl: './top-button.component.html',\n  styleUrls: ['./top-button.component.css']\n})\nexport class TopButtonComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}